{"ast":null,"code":"export const API_BASE_URL='http://localhost:8080/api';// Helper function for delay\nconst delay=ms=>new Promise(resolve=>setTimeout(resolve,ms));// Unified API call function with error handling\nconst fetchWithErrorHandling=async function(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const token=localStorage.getItem('token');const defaultHeaders={'Content-Type':'application/json'};if(token){defaultHeaders['Authorization']=`Bearer ${token}`;}const response=await fetch(url,{...options,headers:{...defaultHeaders,...options.headers}});if(!response.ok){const errorText=await response.text();throw new Error(`API call failed: ${response.status} - ${errorText}`);}return response.json();};// Fetch project content by ID\nexport const fetchProjectContent=async projectId=>{try{const token=localStorage.getItem('token');if(!token)throw new Error('Authentication required');const data=await fetchWithErrorHandling(`${API_BASE_URL}/project-content/id?id=${projectId}`,{headers:{'Authorization':`Bearer ${token}`}});return{id:data.id,project_id:data.project_id,content:data.content||''};}catch(error){console.error('Error fetching project content:',error);throw error;}};// Create new project from Wikipedia URL\nexport const createWikiProject=async wikiUrl=>{try{const token=localStorage.getItem('token');if(!token)throw new Error('Authentication required');const payload={link:wikiUrl};console.log('Creating project with payload:',payload);const project=await fetchWithErrorHandling(`${API_BASE_URL}/project`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify(payload)});await delay(2000);// Wait for content processing\nreturn project;}catch(error){console.error('Error creating wiki project:',error);throw error;}};// Fetch project by ID with content\nexport const fetchWikiProject=async projectId=>{try{const[project,content]=await Promise.all([fetchWithErrorHandling(`${API_BASE_URL}/project/id?id=${projectId}`),fetchProjectContent(projectId)]);return{...project,content:content.content};}catch(error){console.error('Error fetching wiki project:',error);throw error;}};// Fetch project by title\nexport const getProjectByTitle=async title=>{try{const project=await fetchWithErrorHandling(`${API_BASE_URL}/project/title?title=${encodeURIComponent(title)}`);const content=await fetchProjectContent(project.id);return{...project,content:content.content};}catch(error){console.error('Error fetching project by title:',error);throw error;}};// Get all projects\nexport const getAllProjects=async()=>{try{const token=localStorage.getItem('token');if(!token)throw new Error('Authentication required');return await fetchWithErrorHandling(`${API_BASE_URL}/project`,{headers:{'Authorization':`Bearer ${token}`}});}catch(error){console.error('Error fetching all projects:',error);throw error;}};// Delete project by ID\nexport const deleteProject=async projectId=>{try{const token=localStorage.getItem('token');if(!token)throw new Error('Authentication required');return await fetchWithErrorHandling(`${API_BASE_URL}/project`,{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify({id:projectId})});}catch(error){console.error('Error deleting project:',error);throw error;}};// Save progress data\nexport const saveProgress=async(progressData,totalWords)=>{try{const token=localStorage.getItem('token');if(!token)throw new Error('Authentication required');const progressPercent=progressData.completedWords/totalWords*100;const updatedProgressData={...progressData,progress:progressData.completedWords,progress_percent:progressPercent};console.log('Saving progress with data:',updatedProgressData);// Debugging log\nreturn await fetchWithErrorHandling(`${API_BASE_URL}/project/progress`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify(updatedProgressData)});}catch(error){console.error('Error saving progress:',error);throw error;}};","map":{"version":3,"names":["API_BASE_URL","delay","ms","Promise","resolve","setTimeout","fetchWithErrorHandling","url","options","arguments","length","undefined","token","localStorage","getItem","defaultHeaders","response","fetch","headers","ok","errorText","text","Error","status","json","fetchProjectContent","projectId","data","id","project_id","content","error","console","createWikiProject","wikiUrl","payload","link","log","project","method","body","JSON","stringify","fetchWikiProject","all","getProjectByTitle","title","encodeURIComponent","getAllProjects","deleteProject","saveProgress","progressData","totalWords","progressPercent","completedWords","updatedProgressData","progress","progress_percent"],"sources":["/Users/johnmedlock/wikiType-frontend/src/services/wikiService.js"],"sourcesContent":["export const API_BASE_URL = 'http://localhost:8080/api';\n\n// Helper function for delay\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n// Unified API call function with error handling\nconst fetchWithErrorHandling = async (url, options = {}) => {\n  const token = localStorage.getItem('token');\n\n  const defaultHeaders = {\n    'Content-Type': 'application/json',\n  };\n\n  if (token) {\n    defaultHeaders['Authorization'] = `Bearer ${token}`;\n  }\n\n  const response = await fetch(url, {\n    ...options,\n    headers: {\n      ...defaultHeaders,\n      ...options.headers,\n    },\n  });\n\n  if (!response.ok) {\n    const errorText = await response.text();\n    throw new Error(`API call failed: ${response.status} - ${errorText}`);\n  }\n  \n  return response.json();\n};\n\n// Fetch project content by ID\nexport const fetchProjectContent = async (projectId) => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) throw new Error('Authentication required');\n\n    const data = await fetchWithErrorHandling(\n      `${API_BASE_URL}/project-content/id?id=${projectId}`,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }\n    );\n\n    return {\n      id: data.id,\n      project_id: data.project_id,\n      content: data.content || ''\n    };\n  } catch (error) {\n    console.error('Error fetching project content:', error);\n    throw error;\n  }\n};\n\n// Create new project from Wikipedia URL\nexport const createWikiProject = async (wikiUrl) => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) throw new Error('Authentication required');\n\n    const payload = { link: wikiUrl };\n    console.log('Creating project with payload:', payload);\n\n    const project = await fetchWithErrorHandling(\n      `${API_BASE_URL}/project`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(payload)\n      }\n    );\n\n    await delay(2000); // Wait for content processing\n    return project;\n  } catch (error) {\n    console.error('Error creating wiki project:', error);\n    throw error;\n  }\n};\n\n// Fetch project by ID with content\nexport const fetchWikiProject = async (projectId) => {\n  try {\n    const [project, content] = await Promise.all([\n      fetchWithErrorHandling(`${API_BASE_URL}/project/id?id=${projectId}`),\n      fetchProjectContent(projectId)\n    ]);\n    return { ...project, content: content.content };\n  } catch (error) {\n    console.error('Error fetching wiki project:', error);\n    throw error;\n  }\n};\n\n// Fetch project by title\nexport const getProjectByTitle = async (title) => {\n  try {\n    const project = await fetchWithErrorHandling(`${API_BASE_URL}/project/title?title=${encodeURIComponent(title)}`);\n    const content = await fetchProjectContent(project.id);\n    return { ...project, content: content.content };\n  } catch (error) {\n    console.error('Error fetching project by title:', error);\n    throw error;\n  }\n};\n\n// Get all projects\nexport const getAllProjects = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) throw new Error('Authentication required');\n\n    return await fetchWithErrorHandling(\n      `${API_BASE_URL}/project`,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }\n    );\n  } catch (error) {\n    console.error('Error fetching all projects:', error);\n    throw error;\n  }\n};\n\n// Delete project by ID\nexport const deleteProject = async (projectId) => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) throw new Error('Authentication required');\n\n    return await fetchWithErrorHandling(\n      `${API_BASE_URL}/project`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ id: projectId })\n      }\n    );\n  } catch (error) {\n    console.error('Error deleting project:', error);\n    throw error;\n  }\n};\n\n// Save progress data\nexport const saveProgress = async (progressData, totalWords) => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) throw new Error('Authentication required');\n\n    const progressPercent = (progressData.completedWords / totalWords) * 100;\n\n    const updatedProgressData = {\n      ...progressData,\n      progress: progressData.completedWords,\n      progress_percent: progressPercent\n    };\n\n    console.log('Saving progress with data:', updatedProgressData); // Debugging log\n\n    return await fetchWithErrorHandling(\n      `${API_BASE_URL}/project/progress`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedProgressData)\n      }\n    );\n  } catch (error) {\n    console.error('Error saving progress:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}