{"ast":null,"code":"// src/components/Register/Register.js\nimport React,{useState}from'react';import{useNavigate,Link}from'react-router-dom';import'./Register.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[error,setError]=useState('');const[success,setSuccess]=useState('');const navigate=useNavigate();const handleRegister=async e=>{e.preventDefault();setError('');setSuccess('');if(password!==confirmPassword){setError('Passwords do not match.');return;}try{const response=await fetch('http://localhost:8080/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(response.status===201){setSuccess('Registration successful! A verification code has been sent to your email.');// Redirect to Verify after a short delay, passing the email\nsetTimeout(()=>{navigate('/verify',{state:{email}});},3000);}else{const errorData=await response.json();setError(errorData.message||'Registration failed. Please try again.');}}catch(err){setError('An error occurred. Please try again.');console.error(err);}};return/*#__PURE__*/_jsx(\"div\",{className:\"register-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"register-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"register-email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"register-email\",value:email,onChange:e=>setEmail(e.target.value),required:true,placeholder:\"user@example.com\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"register-password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"register-password\",value:password,onChange:e=>setPassword(e.target.value),required:true,placeholder:\"Enter your password\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"register-confirm-password\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"register-confirm-password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true,placeholder:\"Re-enter your password\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:success}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button\",children:\"Register\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"link\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login here\"})]})})]})});};export default Register;","map":{"version":3,"names":["React","useState","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","Register","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","navigate","handleRegister","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","setTimeout","state","errorData","json","message","err","console","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required","placeholder","to"],"sources":["/Users/johnmedlock/wikiType-frontend/src/components/Register/Register.jsx"],"sourcesContent":["// src/components/Register/Register.js\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './Register.scss';\n\nconst Register = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8080/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n\n      if (response.status === 201) {\n        setSuccess('Registration successful! A verification code has been sent to your email.');\n        // Redirect to Verify after a short delay, passing the email\n        setTimeout(() => {\n          navigate('/verify', { state: { email } });\n        }, 3000);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Registration failed. Please try again.');\n      }\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"register-container\">\n      <div className=\"register-card\">\n        <h2>Register</h2>\n        <form onSubmit={handleRegister}>\n          <div className=\"form-group\">\n            <label htmlFor=\"register-email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"register-email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              placeholder=\"user@example.com\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"register-password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"register-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              placeholder=\"Enter your password\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"register-confirm-password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              id=\"register-confirm-password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n              placeholder=\"Re-enter your password\"\n            />\n          </div>\n          {error && <div className=\"error-message\">{error}</div>}\n          {success && <div className=\"success-message\">{success}</div>}\n          <button type=\"submit\" className=\"button\">Register</button>\n        </form>\n        <div className=\"link\">\n          <p>Already have an account? <Link to=\"/login\">Login here</Link></p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}