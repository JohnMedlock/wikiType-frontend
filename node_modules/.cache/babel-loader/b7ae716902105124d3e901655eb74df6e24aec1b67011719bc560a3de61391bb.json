{"ast":null,"code":"import React from'react';import'./WordDisplay.scss';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const WordDisplay=_ref=>{let{words,currentWordIndex,currentCharIndex,input,typedHistory}=_ref;const isWordCorrect=(word,typed)=>word===typed;return/*#__PURE__*/_jsx(\"div\",{className:\"word-display\",children:words.map((word,wordIndex)=>{let className='';if(wordIndex<currentWordIndex){const typedWord=typedHistory[wordIndex]||'';className=`completed-word ${isWordCorrect(word,typedWord)?'word-correct':'word-incorrect'}`;}else if(wordIndex===currentWordIndex){className='current-word';}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:className,children:wordIndex===currentWordIndex?/*#__PURE__*/_jsxs(_Fragment,{children:[word.split('').map((char,i)=>{let charClass='';if(i<currentCharIndex){charClass=char===input[i]?'correct':'incorrect';}return/*#__PURE__*/_jsxs(\"span\",{className:charClass,children:[char,i===currentCharIndex-1&&/*#__PURE__*/_jsx(\"span\",{className:\"cursor\"})]},i);}),currentCharIndex>=word.length&&/*#__PURE__*/_jsx(\"span\",{className:\"cursor\"})]}):wordIndex<currentWordIndex?word.split('').map((char,i)=>{const typedChar=(typedHistory[wordIndex]||'')[i];const charClass=typedChar?char===typedChar?'correct':'incorrect':'';return/*#__PURE__*/_jsx(\"span\",{className:charClass,children:char},i);}):word}),' ']},wordIndex);})});};export default WordDisplay;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WordDisplay","_ref","words","currentWordIndex","currentCharIndex","input","typedHistory","isWordCorrect","word","typed","className","children","map","wordIndex","typedWord","split","char","i","charClass","length","typedChar"],"sources":["/Users/johnmedlock/wikiType-frontend/src/components/WordDisplay/WordDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport './WordDisplay.scss';\n\nconst WordDisplay = ({ words, currentWordIndex, currentCharIndex, input, typedHistory }) => {\n  const isWordCorrect = (word, typed) => word === typed;\n\n  return (\n    <div className=\"word-display\">\n      {words.map((word, wordIndex) => {\n        let className = '';\n        if (wordIndex < currentWordIndex) {\n          const typedWord = typedHistory[wordIndex] || '';\n          className = `completed-word ${isWordCorrect(word, typedWord) ? 'word-correct' : 'word-incorrect'}`;\n        } else if (wordIndex === currentWordIndex) {\n          className = 'current-word';\n        }\n\n        return (\n          <React.Fragment key={wordIndex}>\n            <span className={className}>\n              {wordIndex === currentWordIndex ? (\n                <>\n                  {word.split('').map((char, i) => {\n                    let charClass = '';\n                    if (i < currentCharIndex) {\n                      charClass = char === input[i] ? 'correct' : 'incorrect';\n                    }\n                    return (\n                      <span key={i} className={charClass}>\n                        {char}\n                        {i === currentCharIndex - 1 && <span className=\"cursor\"></span>}\n                      </span>\n                    );\n                  })}\n                  {currentCharIndex >= word.length && <span className=\"cursor\"></span>}\n                </>\n              ) : wordIndex < currentWordIndex ? (\n                word.split('').map((char, i) => {\n                  const typedChar = (typedHistory[wordIndex] || '')[i];\n                  const charClass = typedChar ? (char === typedChar ? 'correct' : 'incorrect') : '';\n                  return (\n                    <span key={i} className={charClass}>\n                      {char}\n                    </span>\n                  );\n                })\n              ) : (\n                word\n              )}\n            </span>\n            {' '}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default WordDisplay;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE5B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAwE,IAAvE,CAAEC,KAAK,CAAEC,gBAAgB,CAAEC,gBAAgB,CAAEC,KAAK,CAAEC,YAAa,CAAC,CAAAL,IAAA,CACrF,KAAM,CAAAM,aAAa,CAAGA,CAACC,IAAI,CAAEC,KAAK,GAAKD,IAAI,GAAKC,KAAK,CAErD,mBACEd,IAAA,QAAKe,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BT,KAAK,CAACU,GAAG,CAAC,CAACJ,IAAI,CAAEK,SAAS,GAAK,CAC9B,GAAI,CAAAH,SAAS,CAAG,EAAE,CAClB,GAAIG,SAAS,CAAGV,gBAAgB,CAAE,CAChC,KAAM,CAAAW,SAAS,CAAGR,YAAY,CAACO,SAAS,CAAC,EAAI,EAAE,CAC/CH,SAAS,CAAG,kBAAkBH,aAAa,CAACC,IAAI,CAAEM,SAAS,CAAC,CAAG,cAAc,CAAG,gBAAgB,EAAE,CACpG,CAAC,IAAM,IAAID,SAAS,GAAKV,gBAAgB,CAAE,CACzCO,SAAS,CAAG,cAAc,CAC5B,CAEA,mBACEb,KAAA,CAACJ,KAAK,CAACK,QAAQ,EAAAa,QAAA,eACbhB,IAAA,SAAMe,SAAS,CAAEA,SAAU,CAAAC,QAAA,CACxBE,SAAS,GAAKV,gBAAgB,cAC7BN,KAAA,CAAAE,SAAA,EAAAY,QAAA,EACGH,IAAI,CAACO,KAAK,CAAC,EAAE,CAAC,CAACH,GAAG,CAAC,CAACI,IAAI,CAAEC,CAAC,GAAK,CAC/B,GAAI,CAAAC,SAAS,CAAG,EAAE,CAClB,GAAID,CAAC,CAAGb,gBAAgB,CAAE,CACxBc,SAAS,CAAGF,IAAI,GAAKX,KAAK,CAACY,CAAC,CAAC,CAAG,SAAS,CAAG,WAAW,CACzD,CACA,mBACEpB,KAAA,SAAca,SAAS,CAAEQ,SAAU,CAAAP,QAAA,EAChCK,IAAI,CACJC,CAAC,GAAKb,gBAAgB,CAAG,CAAC,eAAIT,IAAA,SAAMe,SAAS,CAAC,QAAQ,CAAO,CAAC,GAFtDO,CAGL,CAAC,CAEX,CAAC,CAAC,CACDb,gBAAgB,EAAII,IAAI,CAACW,MAAM,eAAIxB,IAAA,SAAMe,SAAS,CAAC,QAAQ,CAAO,CAAC,EACpE,CAAC,CACDG,SAAS,CAAGV,gBAAgB,CAC9BK,IAAI,CAACO,KAAK,CAAC,EAAE,CAAC,CAACH,GAAG,CAAC,CAACI,IAAI,CAAEC,CAAC,GAAK,CAC9B,KAAM,CAAAG,SAAS,CAAG,CAACd,YAAY,CAACO,SAAS,CAAC,EAAI,EAAE,EAAEI,CAAC,CAAC,CACpD,KAAM,CAAAC,SAAS,CAAGE,SAAS,CAAIJ,IAAI,GAAKI,SAAS,CAAG,SAAS,CAAG,WAAW,CAAI,EAAE,CACjF,mBACEzB,IAAA,SAAce,SAAS,CAAEQ,SAAU,CAAAP,QAAA,CAChCK,IAAI,EADIC,CAEL,CAAC,CAEX,CAAC,CAAC,CAEFT,IACD,CACG,CAAC,CACN,GAAG,GAhCeK,SAiCL,CAAC,CAErB,CAAC,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}