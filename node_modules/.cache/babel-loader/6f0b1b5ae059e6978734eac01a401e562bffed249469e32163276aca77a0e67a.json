{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{useLocation,useNavigate,useParams}from'react-router-dom';import Metrics from'../../components/Metrics/Metrics';import WordDisplay from'../../components/WordDisplay/WordDisplay';import{fetchWikiProject,saveProgress as saveProgressAPI}from'../../services/wikiService';import'./TypingScreen.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CHUNK_SIZE=50;const TypingScreen=()=>{var _location$state;const{projectId}=useParams();const location=useLocation();const navigate=useNavigate();const completedWords=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.completedWords)||0;const[allWords,setAllWords]=useState([]);const[currentChunk,setCurrentChunk]=useState(0);const[words,setWords]=useState([]);const[currentWordIndex,setCurrentWordIndex]=useState(0);const[currentCharIndex,setCurrentCharIndex]=useState(0);const[input,setInput]=useState('');const[startTime,setStartTime]=useState(null);const[wpm,setWpm]=useState(0);const[accuracy,setAccuracy]=useState(100);const[correctChars,setCorrectChars]=useState(0);const[totalChars,setTotalChars]=useState(0);const[typedHistory,setTypedHistory]=useState([]);const[progress,setProgress]=useState(0);const[error,setError]=useState(null);const inputRef=useRef(null);const intervalRef=useRef(null);const elapsedTimeRef=useRef(0);const[isLoading,setIsLoading]=useState(false);const[hasContent,setHasContent]=useState(false);const processContent=content=>{if(!content)return[];return content.split(/\\s+/).filter(word=>word.length>0);};useEffect(()=>{const focusInput=()=>{var _inputRef$current;return(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();};if(hasContent){focusInput();document.addEventListener('click',focusInput);return()=>document.removeEventListener('click',focusInput);}},[hasContent]);useEffect(()=>{const loadWikiContent=async()=>{if(!projectId){setError('No project ID found. Redirecting to dashboard...');setTimeout(()=>navigate('/dashboard'),3000);return;}setIsLoading(true);setError(null);try{const project=await fetchWikiProject(projectId);if(!project||!project.content){throw new Error('Invalid project content');}const words=processContent(project.content);if(words.length===0){throw new Error('No valid content found');}const autoCompletedChunks=Math.floor(completedWords/CHUNK_SIZE);const remainingWordsInChunk=completedWords%CHUNK_SIZE;setAllWords(words);setCurrentChunk(autoCompletedChunks);setWords(words.slice(autoCompletedChunks*CHUNK_SIZE,(autoCompletedChunks+1)*CHUNK_SIZE));setCurrentWordIndex(remainingWordsInChunk);setHasContent(true);}catch(error){console.error('Failed to load wiki content:',error);setError(error.message);setHasContent(false);}finally{setIsLoading(false);}};loadWikiContent();},[projectId,navigate,completedWords]);useEffect(()=>{if(startTime){intervalRef.current=setInterval(()=>{const elapsedMinutes=(Date.now()-startTime)/1000/60;const calculatedWpm=Math.round(correctChars/5/elapsedMinutes)||0;setWpm(calculatedWpm);const calculatedAccuracy=Math.round(correctChars/totalChars*100)||0;setAccuracy(calculatedAccuracy);},1000);return()=>{if(intervalRef.current){clearInterval(intervalRef.current);}};}},[startTime,correctChars,totalChars]);const saveProgress=async()=>{const progressData={projectId:Number(projectId),wpm,accuracy,completedWords:currentChunk*CHUNK_SIZE+currentWordIndex,timestamp:new Date().toISOString()};console.log('Saving progress:',progressData);try{await saveProgressAPI(progressData);setError('Progress saved successfully!');setTimeout(()=>setError(null),3000);}catch(err){console.error('Failed to save progress:',err);setError('Failed to save progress');}};const handleInput=event=>{const value=event.target.value;if(!startTime)setStartTime(Date.now());if(value.endsWith(' ')){const typedWord=value.trim();const currentWord=words[currentWordIndex];setTypedHistory([...typedHistory,typedWord]);let correct=0;for(let i=0;i<currentWord.length;i++){if(i<typedWord.length&&currentWord[i]===typedWord[i]){correct++;}}setCorrectChars(prev=>prev+correct);setTotalChars(prev=>prev+currentWord.length);if(currentWordIndex===words.length-1){const nextChunk=currentChunk+1;const start=nextChunk*CHUNK_SIZE;const end=start+CHUNK_SIZE;if(start<allWords.length){setCurrentChunk(nextChunk);setWords(allWords.slice(start,end));setCurrentWordIndex(0);setTypedHistory([]);}}else{setCurrentWordIndex(prev=>prev+1);}setInput('');setCurrentCharIndex(0);const totalProgress=(currentChunk*CHUNK_SIZE+currentWordIndex)/allWords.length*100;setProgress(Math.min(100,Math.round(totalProgress)));}else{setInput(value);setCurrentCharIndex(value.length);}};return/*#__PURE__*/_jsx(\"div\",{className:\"typing-test-container\",onClick:()=>{var _inputRef$current2;return(_inputRef$current2=inputRef.current)===null||_inputRef$current2===void 0?void 0:_inputRef$current2.focus();},children:hasContent?/*#__PURE__*/_jsxs(\"div\",{className:\"typing-area\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress\",style:{width:`${progress}%`}})}),/*#__PURE__*/_jsx(WordDisplay,{words:words,currentWordIndex:currentWordIndex,currentCharIndex:currentCharIndex,input:input,typedHistory:typedHistory}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:inputRef,value:input,onChange:handleInput,className:\"hidden-input\",autoFocus:true,onBlur:e=>{e.preventDefault();e.target.focus();}}),/*#__PURE__*/_jsx(Metrics,{wpm:wpm,accuracy:accuracy,progress:progress,onPause:isPaused=>{if(isPaused){if(intervalRef.current){clearInterval(intervalRef.current);elapsedTimeRef.current=Date.now()-startTime;}}else{setStartTime(Date.now()-(elapsedTimeRef.current||0));}},onSave:saveProgress})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"wiki-search\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Loading project...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})]})});};export default TypingScreen;","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useNavigate","useParams","Metrics","WordDisplay","fetchWikiProject","saveProgress","saveProgressAPI","jsx","_jsx","jsxs","_jsxs","CHUNK_SIZE","TypingScreen","_location$state","projectId","location","navigate","completedWords","state","allWords","setAllWords","currentChunk","setCurrentChunk","words","setWords","currentWordIndex","setCurrentWordIndex","currentCharIndex","setCurrentCharIndex","input","setInput","startTime","setStartTime","wpm","setWpm","accuracy","setAccuracy","correctChars","setCorrectChars","totalChars","setTotalChars","typedHistory","setTypedHistory","progress","setProgress","error","setError","inputRef","intervalRef","elapsedTimeRef","isLoading","setIsLoading","hasContent","setHasContent","processContent","content","split","filter","word","length","focusInput","_inputRef$current","current","focus","document","addEventListener","removeEventListener","loadWikiContent","setTimeout","project","Error","autoCompletedChunks","Math","floor","remainingWordsInChunk","slice","console","message","setInterval","elapsedMinutes","Date","now","calculatedWpm","round","calculatedAccuracy","clearInterval","progressData","Number","timestamp","toISOString","log","err","handleInput","event","value","target","endsWith","typedWord","trim","currentWord","correct","i","prev","nextChunk","start","end","totalProgress","min","className","onClick","_inputRef$current2","children","style","width","type","ref","onChange","autoFocus","onBlur","e","preventDefault","onPause","isPaused","onSave"],"sources":["/Users/johnmedlock/wikiType-frontend/src/pages/TypingScreen/TypingScreen.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport Metrics from '../../components/Metrics/Metrics';\nimport WordDisplay from '../../components/WordDisplay/WordDisplay';\nimport { fetchWikiProject, saveProgress as saveProgressAPI } from '../../services/wikiService';\nimport './TypingScreen.scss';\n\nconst CHUNK_SIZE = 50;\n\nconst TypingScreen = () => {\n  const { projectId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const completedWords = location.state?.completedWords || 0;\n\n  const [allWords, setAllWords] = useState([]);\n  const [currentChunk, setCurrentChunk] = useState(0);\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n  const [input, setInput] = useState('');\n  const [startTime, setStartTime] = useState(null);\n  const [wpm, setWpm] = useState(0);\n  const [accuracy, setAccuracy] = useState(100);\n  const [correctChars, setCorrectChars] = useState(0);\n  const [totalChars, setTotalChars] = useState(0);\n  const [typedHistory, setTypedHistory] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n\n  const inputRef = useRef(null);\n  const intervalRef = useRef(null);\n  const elapsedTimeRef = useRef(0);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasContent, setHasContent] = useState(false);\n\n  const processContent = (content) => {\n    if (!content) return [];\n    return content.split(/\\s+/).filter(word => word.length > 0);\n  };\n\n  useEffect(() => {\n    const focusInput = () => inputRef.current?.focus();\n\n    if (hasContent) {\n      focusInput();\n      document.addEventListener('click', focusInput);\n      return () => document.removeEventListener('click', focusInput);\n    }\n  }, [hasContent]);\n\n  useEffect(() => {\n    const loadWikiContent = async () => {\n      if (!projectId) {\n        setError('No project ID found. Redirecting to dashboard...');\n        setTimeout(() => navigate('/dashboard'), 3000);\n        return;\n      }\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const project = await fetchWikiProject(projectId);\n        if (!project || !project.content) {\n          throw new Error('Invalid project content');\n        }\n\n        const words = processContent(project.content);\n        if (words.length === 0) {\n          throw new Error('No valid content found');\n        }\n\n        const autoCompletedChunks = Math.floor(completedWords / CHUNK_SIZE);\n        const remainingWordsInChunk = completedWords % CHUNK_SIZE;\n\n        setAllWords(words);\n        setCurrentChunk(autoCompletedChunks);\n        setWords(words.slice(autoCompletedChunks * CHUNK_SIZE, (autoCompletedChunks + 1) * CHUNK_SIZE));\n        setCurrentWordIndex(remainingWordsInChunk);\n        setHasContent(true);\n      } catch (error) {\n        console.error('Failed to load wiki content:', error);\n        setError(error.message);\n        setHasContent(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadWikiContent();\n  }, [projectId, navigate, completedWords]);\n\n  useEffect(() => {\n    if (startTime) {\n      intervalRef.current = setInterval(() => {\n        const elapsedMinutes = (Date.now() - startTime) / 1000 / 60;\n        const calculatedWpm = Math.round((correctChars / 5) / elapsedMinutes) || 0;\n        setWpm(calculatedWpm);\n        const calculatedAccuracy = Math.round((correctChars / totalChars) * 100) || 0;\n        setAccuracy(calculatedAccuracy);\n      }, 1000);\n\n      return () => {\n        if (intervalRef.current) {\n          clearInterval(intervalRef.current);\n        }\n      };\n    }\n  }, [startTime, correctChars, totalChars]);\n\n  const saveProgress = async () => {\n    const progressData = {\n      projectId: Number(projectId),\n      wpm,\n      accuracy,\n      completedWords: currentChunk * CHUNK_SIZE + currentWordIndex,\n      timestamp: new Date().toISOString()\n    };\n\n    console.log('Saving progress:', progressData);\n    \n    try {\n      await saveProgressAPI(progressData);\n      setError('Progress saved successfully!');\n      setTimeout(() => setError(null), 3000);\n    } catch (err) {\n      console.error('Failed to save progress:', err);\n      setError('Failed to save progress');\n    }\n  };\n\n  const handleInput = (event) => {\n    const value = event.target.value;\n    if (!startTime) setStartTime(Date.now());\n\n    if (value.endsWith(' ')) {\n      const typedWord = value.trim();\n      const currentWord = words[currentWordIndex];\n\n      setTypedHistory([...typedHistory, typedWord]);\n\n      let correct = 0;\n      for (let i = 0; i < currentWord.length; i++) {\n        if (i < typedWord.length && currentWord[i] === typedWord[i]) {\n          correct++;\n        }\n      }\n\n      setCorrectChars(prev => prev + correct);\n      setTotalChars(prev => prev + currentWord.length);\n\n      if (currentWordIndex === words.length - 1) {\n        const nextChunk = currentChunk + 1;\n        const start = nextChunk * CHUNK_SIZE;\n        const end = start + CHUNK_SIZE;\n\n        if (start < allWords.length) {\n          setCurrentChunk(nextChunk);\n          setWords(allWords.slice(start, end));\n          setCurrentWordIndex(0);\n          setTypedHistory([]);\n        }\n      } else {\n        setCurrentWordIndex(prev => prev + 1);\n      }\n\n      setInput('');\n      setCurrentCharIndex(0);\n\n      const totalProgress = ((currentChunk * CHUNK_SIZE + currentWordIndex) / allWords.length) * 100;\n      setProgress(Math.min(100, Math.round(totalProgress)));\n    } else {\n      setInput(value);\n      setCurrentCharIndex(value.length);\n    }\n  };\n\n  return (\n    <div className=\"typing-test-container\" onClick={() => inputRef.current?.focus()}>\n      {hasContent ? (\n        <div className=\"typing-area\">\n          <div className=\"progress-bar\">\n            <div className=\"progress\" style={{ width: `${progress}%` }}></div>\n          </div>\n          <WordDisplay\n            words={words}\n            currentWordIndex={currentWordIndex}\n            currentCharIndex={currentCharIndex}\n            input={input}\n            typedHistory={typedHistory}\n          />\n          <input\n            type=\"text\"\n            ref={inputRef}\n            value={input}\n            onChange={handleInput}\n            className=\"hidden-input\"\n            autoFocus\n            onBlur={(e) => {\n              e.preventDefault();\n              e.target.focus();\n            }}\n          />\n          <Metrics\n            wpm={wpm}\n            accuracy={accuracy}\n            progress={progress}\n            onPause={(isPaused) => {\n              if (isPaused) {\n                if (intervalRef.current) {\n                  clearInterval(intervalRef.current);\n                  elapsedTimeRef.current = Date.now() - startTime;\n                }\n              } else {\n                setStartTime(Date.now() - (elapsedTimeRef.current || 0));\n              }\n            }}\n            onSave={saveProgress}\n          />\n        </div>\n      ) : (\n        <div className=\"wiki-search\">\n          <h1>Loading project...</h1>\n          {error && <div className=\"error-message\">{error}</div>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TypingScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}